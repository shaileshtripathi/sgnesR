%\VignetteIndexEntry{sgnesR Vignette}
%\VignetteDepends{}
%\VignetteKeywords{random mapping}
%\VignettePackage{sgnesR}

\documentclass[11pt]{article}
\usepackage[dvips]{graphicx}
\usepackage{makeidx}  % allows for indexgeneration
\usepackage{Sweave}
\usepackage{psfrag}
<<style-Sweave, eval=TRUE, echo=FALSE, results=tex>>=
BiocStyle::latex()
@
\usepackage[english]{babel}
\definecolor{verboxcolor}{RGB}{235,235,235}



\begin{document}
<<preliminaries,echo=FALSE,results=hide>>=
library(sgnesR)

@
\title{Manual for the package sgnesR }

\author{ Shailesh Tripathi\textsuperscript{1,2},  Frank Emmert-Streib\textsuperscript{1,2,*}\\
\textsuperscript{1}Computational Medicine and Statistical Learning Laboratory,\\ Department of Signal Processing,
Tampere University of Technology, Finland\\
\textsuperscript{2}Institute of Biosciences and Medical Technology,\\ 33520 Tampere, Finland\\
\vspace{3mm}
\textsuperscript{*}Corresponding author
}

\date{}
\maketitle
\newpage

\setcounter{tocdepth}{3}
\tableofcontents

%\section{Citation}

%If you use the samExploreR package, please cite \cite{alexey} and \cite{liao2013featurecounts}.





\subsection{For developers only}

If a user wants to make changes to the package and rebuild it again, then the following packages need to be installed additionally. These are necessary for the compilation and the building the package. 


<<install-library, eval=FALSE>>=
 biocLite(c("BiocCheck", "BiocGenerics", "RUnit"))
@



\section{Installation}

The signers package is available from Bioconductor.
To install the package, run the following commands:

Remark: To be added after uploaded to Bioconductor.

If you install it from a local download, run the following command in a terminal from the same directory where you downloaded the package:
%\Rcode{R CMD INSTALL sgnesR_1.0.0.tar.gz}

\section{Quick start}


In the following, we demonstrate briefly the usage of the sgnesR package and the analysis procedures it provides. These examples require a set of equations, and their parameter setting or an graph object representing a network with other parameters


<<>>=
  library(sgnesR)

 ##Generation of a random scale-free network with 20 nodes using an Erdos-Renyi network model.
 g <- erdos.renyi.game(20,.15, directed=TRUE)
 
 # Assigning initial values to the RNAs and protein products to each node randomly.
 V(g)$Ppop <- (sample(100,vcount(g), rep=TRUE))
 V(g)$Rpop <- (sample(100, vcount(g), rep=TRUE))
 
 # Assign -1 or +1 to each directed edge to represent that an interacting node is acting either as a
 #activator, if +1, or as a suppressor, if -1
 sm <- sample(c(1,-1), ecount(g), rep=TRUE, p=c(.8,.2))
 E(g)$op <- sm
 
 # Specifying global reaction parameters.
 rp<-new("rsgns.param",time=0,stop_time=1000,readout_interval=500)
 
 # Specifying the reaction rate constant vector for following reactions: (1) Translation rate, (2) RNA
 #degradation rate, (3) Protein degradation rate, (4) Protein binding rate, (5) unbinding rate, (6)
 #transcription rate.
 rc <- c(0.002, 0.005, 0.005, 0.005, 0.01, 0.02)
 
 #Declaring input data object
 rsg <- new("rsgns.data",network=g, rconst=rc)
 #Call the R function for SGN simulator
 xx <- rsgns.rn(rsg, rp, timeseries=FALSE, sample=50)
 
 ###
 
@
 

\section{Quick start}
Suppose the equations are described as follows
	\begin{enumerate}
	\item ProA + *Ind --[0.002]--$>$ A + ProA
	\item ProB + *Ind --[0.002]--$>$ B + ProB
	\item A --[0.005]--$>$ 
	\item B --[0.005]--$>$ 
	\item A + ProB + *ProA --[0.2]--$>$ ProB.A
	\item B + ProA + *ProB --[0.2]--$>$ ProA.B
	\item ProB.A --[0.01]--$>$ ProB + A
	\item ProA.B --[0.01]--$>$ ProA + B
	\item ProB.A --[0.005]--$>$ ProB
	\item ProA.B --[0.005]--$>$ ProA		
	\end{enumerate}


<<>>=
#Initialize a dataframe object

library(sgnesR)
toggle <- getrndf()

#Set different properties of molecules participating in the reactions and adding to the object "toggle".
setmolprop("toggle", rnindex=1,name="ProA", molcount=1,type="s", rc=.0002,pop=1)
setmolprop("toggle", rnindex=1,name="Ind", inhib="*", molcount=1,type="s", rc=.0002,pop=100)
setmolprop("toggle", rnindex=1,name="A", type="p", pop=1)
setmolprop("toggle", rnindex=1,name="ProA", type="p")
setmolprop("toggle", rnindex=2,name="ProB", molcount=1,type="s", rc=.0002,pop=1)
setmolprop("toggle", rnindex=2,name="Ind", inhib="*", molcount=1,type="s", rc=.0002)
setmolprop("toggle", rnindex=2,name="B", type="p", pop=1)
setmolprop("toggle", rnindex=2,name="ProB", type="p")
setmolprop("toggle", rnindex=3,name="A", type="s",rc=.005)
setmolprop("toggle", rnindex=4,name="B", type="s", rc=.005)
setmolprop("toggle", rnindex=5,name="A", molcount=1,type="s", rc=.2)
setmolprop("toggle", rnindex=5,name="ProB", molcount=1,type="s")
setmolprop("toggle", rnindex=5,name="ProA",inhib="*", molcount=1,type="s")
setmolprop("toggle", rnindex=5,name="ProB.A", molcount=1,type="p",pop=0)
setmolprop("toggle", rnindex=6,name="B", molcount=1,type="s", rc=.2)
setmolprop("toggle", rnindex=6,name="ProA", molcount=1,type="s")
setmolprop("toggle", rnindex=6,name="ProB",inhib="*", molcount=1,type="s")
setmolprop("toggle", rnindex=6,name="ProA.B", molcount=1,type="p",pop=0)
setmolprop("toggle", rnindex=7,name="ProB.A",type="s",rc=0.01)
setmolprop("toggle", rnindex=7,name="ProB",type="p")
setmolprop("toggle", rnindex=7,name="A",type="p")
setmolprop("toggle", rnindex=8,name="ProA.B",type="s",rc=0.01)
setmolprop("toggle", rnindex=8,name="ProA",type="p")
setmolprop("toggle", rnindex=8,name="B",type="p")
setmolprop("toggle", rnindex=9,name="ProB.A",type="s", rc=.005)
setmolprop("toggle", rnindex=9,name="ProA",type="p")
setmolprop("toggle", rnindex=10,name="ProA.B",type="s", rc=.005)
setmolprop("toggle", rnindex=10,name="ProB.A",type="p")
rw <- new("rsgns.waitlist", time=c(1000000), mol=c(100), type=c("Ind"))
rp <- new("rsgns.param", time=0, stop_time=200000,readout_interval=50)
#Specifying global reaction parameters.
p<-new("rsgns.param",time=0,stop_time=1000,readout_interval=500)
# Obtaining the set of reactions and call the R function for the SGN simulator
xx <- getreactions(toggle, waitlist=rw)
rnsx <- rsgns.rn(xx, rp)

@
 

<<>>=
sessionInfo()

@
%\bibliographystyle{plain}

%\bibliography{Bibliography}     % Bibliography file (usually '*.bib' )
\end{document}



